# install packages/load libraries -----------------------------------------
if (!requireNamespace("BiocManager", quietly = TRUE)){
suppressWarnings(suppressMessages(install.packages("BiocManager")))}
if(require(DESeq2)){
suppressWarnings(suppressMessages(library(DESeq2)))
}else{
suppressWarnings(suppressMessages(BiocManager::install("DESeq2",update=F)))
suppressWarnings(suppressMessages(library(DESeq2)))
}
if(require(tidyverse)){
suppressWarnings(suppressMessages(library(tidyverse)))
}else{
install.packages("tidyverse")
suppressWarnings(suppressMessages(library(DESeq2)))
}
if(require(BiocParallel)){
suppressWarnings(suppressMessages(library(BiocParallel)))
}else{
BiocManager::install("BiocParallel",update=F)
suppressWarnings(suppressMessages(library(BiocParallel)))
}
register(MulticoreParam(4))
set.seed(42)
data_dir <- ""
rnaseq_file <- "X.csv.gzip"
clinical_file <- "y.csv.gzip"
gene_size <- 1e2
#cancer_type <- strsplit(rnaseq_file,"_")[[1]][1]
cancer_type <- 'lihc'
outfile <- paste0(cancer_type,"_DESeq2_")
response_name <- "patient.race"
t <- "white"
c <- "asian"
#rnaseq_data <- read_csv(paste0(data_dir,rnaseq_file))
#clinical_data <- read_csv(paste0(data_dir,clinical_file)) %>%
#  data.frame()
rnaseq_data <-
paste0(data_dir,rnaseq_file) %>%
gzfile() %>%
read.table() %>%
as_tibble()
rnaseq_data
#rnaseq_data <- read_csv(paste0(data_dir,rnaseq_file))
#clinical_data <- read_csv(paste0(data_dir,clinical_file)) %>%
#  data.frame()
rnaseq_data <-
paste0(data_dir,rnaseq_file) %>%
gzfile() %>%
read.table(sep = ",") %>%
as_tibble()
rnaseq_data
#rnaseq_data <- read_csv(paste0(data_dir,rnaseq_file))
#clinical_data <- read_csv(paste0(data_dir,clinical_file)) %>%
#  data.frame()
rnaseq_data <-
paste0(data_dir,rnaseq_file) %>%
gzfile() %>%
read.table(sep = ",",header = T) %>%
as_tibble()
rnaseq_data
rnaseq_data_clean <- rnaseq_data
rnaseq_data %>% rename(
X = "bcr_patient_barcode"
)
rnaseq_data %>% rename(
"bcr_patient_barcode" = "X"
)
#rnaseq_data <- read_csv(paste0(data_dir,rnaseq_file))
#clinical_data <- read_csv(paste0(data_dir,clinical_file)) %>%
#  data.frame()
rnaseq_data <-
paste0(data_dir,rnaseq_file) %>%
gzfile() %>%
read.table(sep = ",",header = T) %>%
as_tibble() %>%
rename(
"bcr_patient_barcode" = "X"
)
rnaseq_data_clean <- rnaseq_data
rnaseq_data_clean$bcr_patient_barcode <-
unlist(
lapply(
strsplit(
str_to_lower(rnaseq_data$bcr_patient_barcode),"-"),
function(x)paste0(x[1:3],collapse="-")
)
)
rnaseq_data_clean
colData <- rnaseq_data_clean %>% select(bcr_patient_barcode, response_name)
colData
#rnaseq_data <- read_csv(paste0(data_dir,rnaseq_file))
clinical_data <- read_csv(paste0(data_dir,clinical_file)) %>%
data.frame()
clinical_file <- "y.csv"
#rnaseq_data <- read_csv(paste0(data_dir,rnaseq_file))
clinical_data <- read_csv(paste0(data_dir,clinical_file)) %>%
data.frame()
clinical_data
rnaseq_data %>% head()
clinical_data
clinical_data <- read_csv(paste0(data_dir,clinical_file)) %>%
data.frame() %>%
rename(
"bcr_patient_barcode" = "X"
)
clinical_data
clinical_data <- read_csv(paste0(data_dir,clinical_file)) %>%
data.frame()
clinical_data <- read_csv(paste0(data_dir,clinical_file)) %>%
data.frame() %>%
rename(
"bcr_patient_barcode" = "X"
)
clinical_data <- read_csv(paste0(data_dir,clinical_file)) %>%
data.frame() %>%
rename(
"bcr_patient_barcode" = "X1"
)
clinical_data
clinical_data <- read_csv(paste0(data_dir,clinical_file)) %>%
as_tibble() %>%
rename(
"bcr_patient_barcode" = "X1"
)
clinical_data
rnaseq_data_clean <- inner_join(rnaseq_data,clinical_data)
rnaseq_data_clean
colnames(rnaseq_data_clean)
tail(colnames(rnaseq_data_clean))
rnaseq_data_clean$bcr_patient_barcode <-
unlist(
lapply(
strsplit(
str_to_lower(rnaseq_data$bcr_patient_barcode),"-"),
function(x)paste0(x[1:3],collapse="-")
)
)
colDat <- rnaseq_data_clean %>% select(bcr_patient_barcode, response_name)
response_name <- "tumor_stage"
colDat <- rnaseq_data_clean %>% select(bcr_patient_barcode, response_name)
eligible_responses <-
colnames(colDat)[
apply(colDat,2,function(x){sum(!is.na(x))>(nrow(colDat)*.9)})
]
eligible_responses
rows.to.keep <-
rnaseq_data_clean$bcr_patient_barcode %in% colData$bcr_patient_barcode
colData$bcr_patient_barcode
colDat <- rnaseq_data_clean %>% select(bcr_patient_barcode, response_name)
colDat
rows.to.keep <-
rnaseq_data_clean$bcr_patient_barcode %in% colData$bcr_patient_barcode
rows.to.keep
rows.to.keep <-
rnaseq_data_clean$bcr_patient_barcode %in% colData$bcr_patient_barcode
rows.to.keep <-
rnaseq_data_clean$bcr_patient_barcode %in% colDat$bcr_patient_barcode
rsem.in <- data.frame(
t(
rnaseq_data_clean[rows.to.keep,colnames(rnaseq_data_clean)!="bcr_patient_barcode"]
)
)
rsem.in
if(is.numeric(as.integer(gene_size)) || is.integer(gene_size)){
rsem.in.sub <- rsem.in[sample(1:nrow(rsem.in),gene_size),]
}
if(gene_size=="full"){
rsem.in.sub <- rsem.in
}
formula <- as.formula(paste0("~",response_name))
formula
suppressMessages(dds <- subset(DESeqDataSetFromMatrix(ceiling(rsem.in.sub),
colDat,
formula)), select=-c(response_name))
suppressMessages(dds <-
subset(DESeqDataSetFromMatrix(ceiling(rsem.in.sub),
colDat,
formula), select=-c(response_name)))
rsem.in.sub
rsem.in.sub[,1]
class(rsem.in.sub[,1])
apply(rsem.in.sub,2,as.integer)
rsem.in.sub <- apply(rsem.in.sub,2,as.integer)
suppressMessages(dds <-
subset(DESeqDataSetFromMatrix(ceiling(rsem.in.sub),
colDat,
formula), select=-c(response_name)))
response_name
rsem.in.sub
if(is.numeric(as.integer(gene_size)) || is.integer(gene_size)){
rsem.in.sub <- rsem.in[sample(1:nrow(rsem.in),gene_size),]
}
rownames(rsem.in.sub)
rsem.in[sample(1:nrow(rsem.in),gene_size),]
rsem.in[sample(1:nrow(rsem.in),gene_size),][,1]
rsem.in.sub <- as.integer(rsem.in[sample(1:nrow(rsem.in),gene_size),])
rsem.in.sub <- apply(
rsem.in[sample(1:nrow(rsem.in),gene_size),],
2,as.integer)
rsem.in.sub
rsem.in.sub <- rsem.in[sample(1:nrow(rsem.in),gene_size),]
if(is.numeric(as.integer(gene_size)) || is.integer(gene_size)){
rsem.in.sub <- rsem.in[sample(1:nrow(rsem.in),gene_size),]
rows <- rownames(rsem.in.sub)
rsem.in.sub <- apply(rsem.in.sub,2,as.integer)
rownames(rsem.in.sub) <- rows
}
rsem.in.sub
rsem.in[sample(1:nrow(rsem.in),gene_size),]
rsem.in
suppressMessages(dds <-
subset(DESeqDataSetFromMatrix(ceiling(rsem.in.sub),
colDat,
formula), select=-c(response_name)))
suppressMessages(dds <-
subset(DESeqDataSetFromMatrix(rsem.in.sub,
colDat,
formula), select=-c(response_name)))
DESeqDataSetFromMatrix(rsem.in.sub,
colDat,
formula)
suppressMessages(dds <-
DESeqDataSetFromMatrix(rsem.in.sub,
colDat,formula))
res <- DESeq(dds)
results <- results(res,contrast=c(response_name,t,c))
t
t <- "i"
c <- "ii"
results <- results(res,contrast=c(response_name,t,c))
results_df <- data.frame(results)
rownames(results_df) <- 1:nrow(results_df)
results_df$Gene <- row.names(dds)
results_df
results_df %>% View
outfile2 <- paste0(outfile,gene_size,
"_sampled_genes_",response_name,"_",
t,"_vs_",c,".csv")
outfile2
results_df %>%
write_csv(paste0(data_dir,outfile2))
# install packages/load libraries -----------------------------------------
if (!requireNamespace("BiocManager", quietly = TRUE)){
suppressWarnings(suppressMessages(install.packages("BiocManager")))}
if(require(DESeq2)){
suppressWarnings(suppressMessages(library(DESeq2)))
}else{
suppressWarnings(suppressMessages(BiocManager::install("DESeq2",update=F)))
suppressWarnings(suppressMessages(library(DESeq2)))
}
if(require(tidyverse)){
suppressWarnings(suppressMessages(library(tidyverse)))
}else{
install.packages("tidyverse")
suppressWarnings(suppressMessages(library(DESeq2)))
}
if(require(BiocParallel)){
suppressWarnings(suppressMessages(library(BiocParallel)))
}else{
BiocManager::install("BiocParallel",update=F)
suppressWarnings(suppressMessages(library(BiocParallel)))
}
register(MulticoreParam(4))
set.seed(42)
data_dir <- ""
rnaseq_file <- "X.csv.gzip"
clinical_file <- "y.csv"
gene_size='full'
cancer_type <- 'lihc'
response_name <- "tumor_stage"
t <- "i"
c <- "ii"
# load data ---------------------------------------------------------------
clinical_data <- read_csv(paste0(data_dir,clinical_file)) %>%
as_tibble() %>%
rename(
"bcr_patient_barcode" = "X1"
)
rnaseq_data <-
paste0(data_dir,rnaseq_file) %>%
gzfile() %>%
read.table(sep = ",",header = T) %>%
as_tibble() %>%
rename(
"bcr_patient_barcode" = "X"
)
# clean rnaseq data for input ----------------------------------------------------
rnaseq_data_clean <- inner_join(rnaseq_data,clinical_data)
# DE analysis -------------------------------------------------------------
rnaseq_data_clean$bcr_patient_barcode <-
unlist(
lapply(
strsplit(
str_to_lower(rnaseq_data$bcr_patient_barcode),"-"),
function(x)paste0(x[1:3],collapse="-")
)
)
colDat <- rnaseq_data_clean %>% select(bcr_patient_barcode, response_name)
rows.to.keep <-
rnaseq_data_clean$bcr_patient_barcode %in% colDat$bcr_patient_barcode
rsem.in <- data.frame(
t(
rnaseq_data_clean[rows.to.keep,colnames(rnaseq_data_clean)!="bcr_patient_barcode"]
)
)
if(is.numeric(as.integer(gene_size)) || is.integer(gene_size)){
rsem.in.sub <- rsem.in[sample(1:nrow(rsem.in),gene_size),]
rows <- rownames(rsem.in.sub)
rsem.in.sub <- apply(rsem.in.sub,2,as.integer)
rownames(rsem.in.sub) <- rows
}
if(gene_size=="full"){
rsem.in.sub <- rsem.in
rows <- rownames(rsem.in.sub)
rsem.in.sub <- apply(rsem.in.sub,2,as.integer)
rownames(rsem.in.sub) <- rows
}
if(is.numeric(as.integer(gene_size)) || is.integer(gene_size)){
rsem.in.sub <- rsem.in[sample(1:nrow(rsem.in),gene_size),]
rows <- rownames(rsem.in.sub)
rsem.in.sub <- apply(rsem.in.sub,2,as.integer)
rownames(rsem.in.sub) <- rows
}
as.integer(gene_size)
is.numeric(as.integer(gene_size))
is.integer(gene_size)
is.numeric(gene_size)
is.integer(as.integer(is.numeric(gene_size)))
is.numeric(gene_size)
if(is.numeric(gene_size)){
rsem.in.sub <- rsem.in[sample(1:nrow(rsem.in),gene_size),]
rows <- rownames(rsem.in.sub)
rsem.in.sub <- apply(rsem.in.sub,2,as.integer)
rownames(rsem.in.sub) <- rows
}
if(gene_size=="full"){
rsem.in.sub <- rsem.in
rows <- rownames(rsem.in.sub)
rsem.in.sub <- apply(rsem.in.sub,2,as.integer)
rownames(rsem.in.sub) <- rows
}
is.numeric(1e2)
gene_size <- "full"
if(gene_size=="full"){
rsem.in.sub <- rsem.in
rows <- rownames(rsem.in.sub)
rsem.in.sub <- na.omit(apply(rsem.in.sub,2,as.integer))
rownames(rsem.in.sub) <- rows
}
rnaseq_data_clean$bcr_patient_barcode <-
unlist(
lapply(
strsplit(
str_to_lower(rnaseq_data$bcr_patient_barcode),"-"),
function(x)paste0(x[1:3],collapse="-")
)
)
colDat <- rnaseq_data_clean %>% select(bcr_patient_barcode, response_name)
rows.to.keep <-
rnaseq_data_clean$bcr_patient_barcode %in% colDat$bcr_patient_barcode
rsem.in <- data.frame(
t(
rnaseq_data_clean[rows.to.keep,colnames(rnaseq_data_clean)!="bcr_patient_barcode"]
)
)
if(is.numeric(as.integer(gene_size)) || is.integer(gene_size)){
rsem.in.sub <- rsem.in[sample(1:nrow(rsem.in),gene_size),]
rows <- rownames(rsem.in.sub)
rsem.in.sub <- apply(rsem.in.sub,2,as.integer)
rownames(rsem.in.sub) <- rows
}
if(gene_size=="full"){
rsem.in.sub <- rsem.in
rows <- rownames(rsem.in.sub)
rsem.in.sub <- na.omit(apply(rsem.in.sub,2,as.integer))
rownames(rsem.in.sub) <- rows
}
if(gene_size=="full"){
rsem.in.sub <- rsem.in
rows <- rownames(rsem.in.sub)
rsem.in.sub <- na.omit(apply(rsem.in.sub,2,as.integer))
rownames(rsem.in.sub) <- rows
}
if(is.numeric(as.integer(gene_size)) || is.integer(gene_size)){
rsem.in.sub <- rsem.in[sample(1:nrow(rsem.in),gene_size),]
rows <- rownames(rsem.in.sub)
rsem.in.sub <- apply(rsem.in.sub,2,as.integer)
rownames(rsem.in.sub) <- rows
}
as.integer(gene_size)
is.integer(gene_size)
if(is.numeric(gene_size)){
rsem.in.sub <- rsem.in[sample(1:nrow(rsem.in),gene_size),]
rows <- rownames(rsem.in.sub)
rsem.in.sub <- apply(rsem.in.sub,2,as.integer)
rownames(rsem.in.sub) <- rows
}
if(gene_size=="full"){
rsem.in.sub <- rsem.in
rows <- rownames(rsem.in.sub)
rsem.in.sub <- na.omit(apply(rsem.in.sub,2,as.integer))
rownames(rsem.in.sub) <- rows
}
if(gene_size=="full"){
rsem.in.sub <- rsem.in
rows <- rownames(rsem.in.sub)
rsem.in.sub <- apply(rsem.in.sub,2,as.integer)
rownames(rsem.in.sub) <- rows
}
formula <- as.formula(paste0("~",response_name))
suppressMessages(dds <-
DESeqDataSetFromMatrix(rsem.in.sub,
colDat,formula))
rsem.in.sub
apply(rsem.in.sub,2,is.na)
apply(rsem.in.sub,2,function(x){sum(is.na(x)))
apply(rsem.in.sub,2,function(x){sum(is.na(x))})
rsem.in.sub
tail(rsem.in.sub)
rows
na.omit(rsem.in.sub)
if(gene_size=="full"){
rsem.in.sub <- rsem.in
rows <- rownames(rsem.in.sub)
rsem.in.sub <- apply(rsem.in.sub,2,as.integer)
rownames(rsem.in.sub) <- rows
rsem.in.sub <- na.omit(rsem.in.sub)
}
formula <- as.formula(paste0("~",response_name))
suppressMessages(dds <-
DESeqDataSetFromMatrix(rsem.in.sub,
colDat,formula))
res <- DESeq(dds)
gene_size=1e2
is.numeric(gene_size)
is.integer(gene_size)
gene_size="1e2"
is.integer(gene_size)
as.integer("1e2")
as.integer("1e2")>0
as.integer("full")>0
as.integer("full")
!is.na(as.integer("full"))
!is.na(as.integer("1e2"))
