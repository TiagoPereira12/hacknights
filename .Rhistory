df %>% fill(Year)
df
colData %>% select(eligible_responses)
colData %>% select(patient.race)
colData %>% select(patient.race) %>% fill()
colData %>% select(patient.race) %>% fill(.direction="down")
colData %>% select(patient.race) %>% tbl() %>% fill(.direction="down")
colData %>% select(patient.race) %>% as.tbl() %>% fill(.direction="down")
colData %>% select(patient.race) %>% as.tbl() %>% fill(.direction="down") %>% View
colData %>% select(patient.race) %>% as.tbl() %>% fill(.direction="down") %>% unlist
colData %>% select(patient.race) %>% as.tbl() %>% fill(.direction="down") %>% unlist %>% unname
colData %>% select(patient.race) %>% as.tbl() %>% fill(.direction="down") %>% unlist %>% unname %>% is.na()
colData %>% select(patient.race) %>% as.tbl() %>% unlist %>% unname %>% is.na()
colData %>% select(patient.race) %>% as.tbl() %>% unlist %>% unname
colData %>% select(patient.race) %>% as.tbl() %>% unlist %>% unname %>% fill(.direction="down")
#converting rsem to whole integers per
#https://www.biostars.org/p/320594/
eligible_responses <-
colnames(colData)[
apply(colData,2,function(x){sum(!is.na(x))>nrow(colData)*.9})
]
colData_filled <-
colData %>%
select(eligible_responses) %>%
fill()
formula <- as.formula(paste0("~",response_name))
dds <- DESeqDataSetFromMatrix(ceiling(rsem.in.sub),
colData,
formula)
df$Year
colData %>% select(patient.race) %>% as.tbl() %>% unlist %>% unname
df$Year
.is.na(df$Year)
is.na(df$Year)
clinical_data <- read_csv(paste0(data_dir,clinical_file)) %>%
fill() %>%
data.frame()
clinical_data %>% View
clinical_data <- read_csv(paste0(data_dir,clinical_file)) %>%
tidyr::fill() %>%
data.frame()
clinical_data %>% View
read_csv(paste0(data_dir,clinical_file)) %>%
tidyr::fill()
read_csv(paste0(data_dir,clinical_file)) %>%
tidyr::fill() %>% View
read_csv(paste0(data_dir,clinical_file)) %>%
replace_na(0)
read_csv(paste0(data_dir,clinical_file)) %>%
as.tbl
read_csv(paste0(data_dir,clinical_file)) %>%
as.tbl %>%
fill() %>% View
read_csv(paste0(data_dir,clinical_file)) %>%
complete() %>% View
read_csv(paste0(data_dir,clinical_file)) %>%
complete() %>% fill %>%
View
clinical_data <- read_csv(paste0(data_dir,clinical_file),na = NA) %>%
fill() %>%
data.frame()
clinical_data <- read_csv(paste0(data_dir,clinical_file),na = "") %>%
fill() %>%
data.frame()
clinical_data %>% View
read_csv(paste0(data_dir,clinical_file),na = "") %>%
data.frame() %>% fill() %>% View
read_csv(paste0(data_dir,clinical_file),na = "") %>%
data.frame() %>% replace_na("missing") %>% View
read_csv(paste0(data_dir,clinical_file)) %>%
data.frame() %>% replace_na("missing") %>% View
read_csv(paste0(data_dir,clinical_file)) %>%
data.frame() %>% replace_na() %>% View
read_csv(paste0(data_dir,clinical_file)) %>%
data.frame() %>% replace_na(0) %>% View
?replace_na
colData$admin.bcr
colData$patient.race
mode(colData$patient.race)
table(colData$patient.race)
max(table(colData$patient.race))
is.max(table(colData$patient.race))
tab <- table(colData$patient.race)
tab(order(tab))
names(tab)[order(tab)]
names(tab)[order(tab,decreasing = T)]
mode=names(tab)[order(tab,decreasing = T)][1]
colData$patient.race[is.na(colData$patient.race)] <- mode
colData$patient.race
apply(colData,2,function(x)x)
apply(colData,2,function(x){tab <- table(colData$patient.race);mode <- names(tab)[order(tab)];x[is.na(x)] <- mode;x})
apply(colData,2,function(x){tab <- table(colData$patient.race);mode <- names(tab)[order(tab)];x[is.na(x)] <- mode;x}) %>% View()
apply(colData,2,function(x){tab <- table(x);mode <- names(tab)[order(tab)];x[is.na(x)] <- mode;x}) %>% View()
clinical_data <- read_csv(paste0(data_dir,clinical_file),na = "") %>%
data.frame()
apply(colData,2,function(x){tab <- table(x);mode <- names(tab)[order(tab)];x[is.na(x)] <- mode;x}) %>% View()
apply(colData,2,function(x){tab <- table(unlist(x));mode <- names(tab)[order(tab)];x[is.na(x)] <- mode;x}) %>% View()
apply(colData,2,function(x){tab <- table(unname(unlist(x)));mode <- names(tab)[order(tab)];x[is.na(x)] <- mode;x}) %>% View()
apply(colData,2,function(x){tab <- table(unname(unlist(x)));tab}) %>% View()
;mode}) %>% View
apply(colData,2,function(x){tab <- table(unname(unlist(x)));names(tab)[order(tab)]})
apply(colData,2,function(x){tab <- table(unname(unlist(x)));names(tab)[order(tab)][1]})
apply(colData,2,function(x){tab <- table(unname(unlist(x)));mode <- names(tab)[order(tab)][1];mode}) %>% View()
colData <-
inner_join(
rnaseq_data_clean %>% select(bcr_patient_barcode),
clinical_data,
by=c("bcr_patient_barcode"="patient.bcr_patient_barcode")
)
eligible_responses <-
colnames(colData)[
apply(colData,2,function(x){sum(!is.na(x))>nrow(colData)*.9})
]
apply(colData %>% select(eligible_responses),2,function(x){tab <- table(unname(unlist(x)));mode <- names(tab)[order(tab)][1];mode}) %>% View()
eligible_responses <-
colnames(colData)[
apply(colData,2,function(x){sum(!is.na(x))>(nrow(colData)*.9))})
]
eligible_responses <-
colnames(colData)[
apply(colData,2,function(x){sum(!is.na(x))>(nrow(colData)*.9))})
]
colData <-
inner_join(
rnaseq_data_clean %>% select(bcr_patient_barcode),
clinical_data,
by=c("bcr_patient_barcode"="patient.bcr_patient_barcode")
)
nrow(colData)*.9
(nrow(colData)*.9)
eligible_responses <-
colnames(colData)[
apply(colData,2,function(x){sum(!is.na(x))>(nrow(colData)*.9)})
]
eligible_responses
ncol(colData)
eligible_responses <-
colnames(colData)[
apply(colData,2,function(x){sum(!is.na(x))>(ncol(colData)*.9)})
]
eligible_responses
eligible_responses <-
colnames(colData)[
apply(colData,2,function(x){sum(!is.na(x))>(ncol(colData)*.5)})
]
eligible_responses
ncol(colData)*.5
colData <-
inner_join(
rnaseq_data_clean %>% select(bcr_patient_barcode),
clinical_data,
by=c("bcr_patient_barcode"="patient.bcr_patient_barcode")
)
eligible_responses <-
colnames(colData)[
apply(colData,2,function(x){sum(!is.na(x))>(ncol(colData)*.5)})
]
eligible_responses
colData
colData %>% View
clinical_data <- read_csv(paste0(data_dir,clinical_file)) %>%
data.frame()
colData <-
inner_join(
rnaseq_data_clean %>% select(bcr_patient_barcode),
clinical_data,
by=c("bcr_patient_barcode"="patient.bcr_patient_barcode")
)
eligible_responses <-
colnames(colData)[
apply(colData,2,function(x){sum(!is.na(x))>(ncol(colData)*.5)})
]
eligible_responses
colData %>% View
apply(colData,2,function(x){sum(!is.na(x))})
apply(colData,2,function(x){sum(!is.na(x))}) %>% View
apply(colData,2,function(x){sum(!is.na(x))>(ncol(colData)*.5)})
apply(colData,2,function(x){sum(!is.na(x))>(ncol(colData)*.5)}) %>% View
apply(colData,2,function(x){sum(!is.na(x))}) %>% View
apply(colData,2,function(x){sum(!is.na(x))>(nrow(colData)*.5)}) %>% View
colnames(colData)[apply(colData,2,function(x){sum(!is.na(x))>(nrow(colData)*.5)})]
eligible_responses <-
colnames(colData)[
apply(colData,2,function(x){sum(!is.na(x))>(nrow(colData)*.9)})
]
eligible_responses
apply(colData %>% select(eligible_responses),2,function(x){tab <- table(unname(unlist(x)));mode <- names(tab)[order(tab)][1];mode}) %>% View()
apply(colData %>% select(eligible_responses),2,function(x){tab <- table(unname(unlist(x)));mode <- names(tab)[order(tab)][1];x[is.na(x)] <- mode}) %>% View()
apply(colData %>% select(eligible_responses),2,function(x){tab <- table(unname(unlist(x)));mode <- names(tab)[order(tab)][1];x[is.na(x)] <- mode;x}) %>% View()
colData_filled <-
apply(colData %>% select(eligible_responses),
2,
function(x){
tab <- table(unname(unlist(x)))
mode <- names(tab)[order(tab)][1]
x[is.na(x)] <- mode
x
}
)
rows.to.keep <-
rnaseq_data_clean$bcr_patient_barcode %in% colData$bcr_patient_barcode
rsem.in <- data.frame(
t(
rnaseq_data_clean[rows.to.keep,colnames(rnaseq_data_clean)!="bcr_patient_barcode"]
)
)
if(is.numeric(gene_size)){
rsem.in.sub <- rsem.in[sample(1:nrow(rsem.in),gene_size),]
}
if(gene_size=="full"){
rsem.in.sub <- rsem.in
}
formula <- as.formula(paste0("~",response_name))
dds <- DESeqDataSetFromMatrix(ceiling(rsem.in.sub),
colData_filled,
formula)
replace(colnames(colData_filled),"\\.","_")
replace(colnames(colData_filled),"\.","_")
replace(colnames(colData_filled),".","_")
suppressMessages(dds <- DESeqDataSetFromMatrix(ceiling(rsem.in.sub),
colData_filled,
formula))
res <- DESeq(dds)
t <- "white"
c <- "asian"
results <- results(res,contrast=c(response_name,t,c))
results_df <- data.frame(results)
results_df$Gene <- row.names(dds)
results_df
rownames(results_df) <- 1:nrow(results_df)
results_df$Gene <- row.names(dds)
results_df
outfile2 <- paste0(outfile,gene_size,"_sampled_genes_",t,"_vs_",c,".csv")
results_df %>%
write_csv(paste0(data_dir,outfile2))
colData_filled <-
apply(colData %>% select(eligible_responses),
2,
function(x){
tab <- table(unname(unlist(x)))
mode <- names(tab)[order(tab)][1]
x[is.na(x)] <- mode
factor(x)
}
)
rows.to.keep <-
rnaseq_data_clean$bcr_patient_barcode %in% colData$bcr_patient_barcode
rsem.in <- data.frame(
t(
rnaseq_data_clean[rows.to.keep,colnames(rnaseq_data_clean)!="bcr_patient_barcode"]
)
)
if(is.numeric(gene_size)){
rsem.in.sub <- rsem.in[sample(1:nrow(rsem.in),gene_size),]
}
if(gene_size=="full"){
rsem.in.sub <- rsem.in
}
formula <- as.formula(paste0("~",response_name))
suppressMessages(dds <- DESeqDataSetFromMatrix(ceiling(rsem.in.sub),
colData_filled,
formula))
res <- DESeq(dds)
results <- results(res,contrast=c(response_name,t,c))
#' To conduct a differential expression analysis that will be a sample
#' for conducting the analysis using TCGA data
#' The TCGA RNASeq data is illumina hiseq Level 3 RSEM normalized expression data
start_time <- Sys.time()
print(paste0("start: ",start_time))
if (!requireNamespace("BiocManager", quietly = TRUE)){
suppressWarnings(suppressMessages(install.packages("BiocManager")))}
if(require(DESeq2)){
suppressWarnings(suppressMessages(library(DESeq2)))
}else{
BiocManager::install("DESeq2",update=F)
suppressWarnings(suppressMessages(library(DESeq2)))
}
if(require(tidyverse)){
suppressWarnings(suppressMessages(library(tidyverse)))
}else{
install.packages("tidyverse")
suppressWarnings(suppressMessages(library(DESeq2)))
}
if(require(BiocParallel)){
suppressWarnings(suppressMessages(library(BiocParallel)))
}else{
BiocManager::install("BiocParallel",update=F)
suppressWarnings(suppressMessages(library(BiocParallel)))
}
register(MulticoreParam(4))
data_dir <- ""
rnaseq_file <- "lihc_rnaseq.csv.gz"
clinical_file <- "lihc_clinical.csv.gz"
gene_size <- 1e2
cancer_type <- strsplit(rnaseq_file,"_")[[1]][1]
outfile <- paste0(cancer_type,"_DESeq2_")
response_name <- "patient.race"
t <- "white"
c <- "asian"
# load data ---------------------------------------------------------------
rnaseq_data <- read_csv(paste0(data_dir,rnaseq_file))
clinical_data <- read_csv(paste0(data_dir,clinical_file)) %>%
data.frame()
# clean rnaseq data for input ----------------------------------------------------
genes <- lapply(
strsplit(
colnames(rnaseq_data),
"\\|"),
function(x)x[1]
) %>% unlist()
genes_logical <- !is.na(sapply(genes,function(x){nchar(x)>2}))
rnaseq_data_clean <- rnaseq_data[,genes_logical]
colnames(rnaseq_data_clean) <- genes[genes_logical]
rnaseq_data_clean <- data.frame(rnaseq_data_clean)
row.names(rnaseq_data_clean) <- rnaseq_data$bcr_patient_barcode
rnaseq_data_clean <- rnaseq_data_clean[order(row.names(rnaseq_data_clean)),]
# DE analysis -------------------------------------------------------------
rnaseq_data_clean$bcr_patient_barcode <-
unlist(
lapply(
strsplit(
str_to_lower(rnaseq_data$bcr_patient_barcode),"-"),
function(x)paste0(x[1:3],collapse="-")
)
)
colData <-
inner_join(
rnaseq_data_clean %>% select(bcr_patient_barcode),
clinical_data,
by=c("bcr_patient_barcode"="patient.bcr_patient_barcode")
)
eligible_responses <-
colnames(colData)[
apply(colData,2,function(x){sum(!is.na(x))>(nrow(colData)*.9)})
]
colData_filled <-
apply(colData %>% select(eligible_responses),
2,
function(x){
tab <- table(unname(unlist(x)))
mode <- names(tab)[order(tab)][1]
x[is.na(x)] <- mode
factor(x)
}
)
rows.to.keep <-
rnaseq_data_clean$bcr_patient_barcode %in% colData$bcr_patient_barcode
rsem.in <- data.frame(
t(
rnaseq_data_clean[rows.to.keep,colnames(rnaseq_data_clean)!="bcr_patient_barcode"]
)
)
if(is.numeric(gene_size)){
rsem.in.sub <- rsem.in[sample(1:nrow(rsem.in),gene_size),]
}
if(gene_size=="full"){
rsem.in.sub <- rsem.in
}
#converting rsem to whole integers per
#https://www.biostars.org/p/320594/
formula <- as.formula(paste0("~",response_name))
suppressMessages(dds <- DESeqDataSetFromMatrix(ceiling(rsem.in.sub),
colData_filled,
formula))
res <- DESeq(dds)
results <- results(res,contrast=c(response_name,t,c))
results_df <- data.frame(results)
rownames(results_df) <- 1:nrow(results_df)
results_df$Gene <- row.names(dds)
outfile2 <- paste0(outfile,gene_size,"_sampled_genes_",t,"_vs_",c,".csv")
results_df %>%
write_csv(paste0(data_dir,outfile2))
end_time <- Sys.time()
print(paste0("end: ",end_time,"\n"))
print(
paste0("duration: ",
round(as.numeric(end_time-start_time,units="mins"),2),
" minutes")
)
?sample.int
lihc_clinical.csv.gz
?.Random.seed
if (!requireNamespace("BiocManager", quietly = TRUE)){
suppressWarnings(suppressMessages(install.packages("BiocManager")))}
if(require(DESeq2)){
suppressWarnings(suppressMessages(library(DESeq2)))
}else{
BiocManager::install("DESeq2",update=F)
suppressWarnings(suppressMessages(library(DESeq2)))
}
if(require(DESeq2)){
suppressWarnings(suppressMessages(library(DESeq2)))
}else{
suppressWarnings(suppressMessages(BiocManager::install("DESeq2",update=F)))
suppressWarnings(suppressMessages(library(DESeq2)))
}
start_time <- Sys.time()
cat(paste0("start: ",start_time,"\n"))
#' EXAMPLE RUN
#' -----------
#' Rscript TCGA_differential_expression_analysis.R "" lihc_rnaseq.csv.gz lihc_clinical.csv.gz 100 patient.race asian white
#' Rscript TCGA_differential_expression_analysis.R "" lihc_rnaseq.csv.gz lihc_clinical.csv.gz 100 patient.gender female male
#'
#'
#'
# install packages/load libraries -----------------------------------------
if (!requireNamespace("BiocManager", quietly = TRUE)){
suppressWarnings(suppressMessages(install.packages("BiocManager")))}
if(require(DESeq2)){
suppressWarnings(suppressMessages(library(DESeq2)))
}else{
suppressWarnings(suppressMessages(BiocManager::install("DESeq2",update=F)))
suppressWarnings(suppressMessages(library(DESeq2)))
}
if(require(tidyverse)){
suppressWarnings(suppressMessages(library(tidyverse)))
}else{
install.packages("tidyverse")
suppressWarnings(suppressMessages(library(DESeq2)))
}
if(require(BiocParallel)){
suppressWarnings(suppressMessages(library(BiocParallel)))
}else{
BiocManager::install("BiocParallel",update=F)
suppressWarnings(suppressMessages(library(BiocParallel)))
}
register(MulticoreParam(4))
# set variables -----------------------------------------------------------
set.seed(42)
data_dir <- ""
rnaseq_file <- "lihc_rnaseq.csv.gz"
clinical_file <- "lihc_clinical.csv.gz"
gene_size <- "full"
cancer_type <- strsplit(rnaseq_file,"_")[[1]][1]
outfile <- paste0(cancer_type,"_DESeq2_")
response_name <- "patient.race"
t <- "white"
c <- "asian"
rnaseq_data <- read_csv(paste0(data_dir,rnaseq_file))
clinical_data <- read_csv(paste0(data_dir,clinical_file)) %>%
data.frame()
# clean rnaseq data for input ----------------------------------------------------
genes <- lapply(
strsplit(
colnames(rnaseq_data),
"\\|"),
function(x)x[1]
) %>% unlist()
genes_logical <- !is.na(sapply(genes,function(x){nchar(x)>2}))
rnaseq_data_clean <- rnaseq_data[,genes_logical]
colnames(rnaseq_data_clean) <- genes[genes_logical]
rnaseq_data_clean <- data.frame(rnaseq_data_clean)
row.names(rnaseq_data_clean) <- rnaseq_data$bcr_patient_barcode
rnaseq_data_clean <- rnaseq_data_clean[order(row.names(rnaseq_data_clean)),]
# DE analysis -------------------------------------------------------------
rnaseq_data_clean$bcr_patient_barcode <-
unlist(
lapply(
strsplit(
str_to_lower(rnaseq_data$bcr_patient_barcode),"-"),
function(x)paste0(x[1:3],collapse="-")
)
)
colData <-
inner_join(
rnaseq_data_clean %>% select(bcr_patient_barcode),
clinical_data,
by=c("bcr_patient_barcode"="patient.bcr_patient_barcode")
)
eligible_responses <-
colnames(colData)[
apply(colData,2,function(x){sum(!is.na(x))>(nrow(colData)*.9)})
]
colData_filled <-
apply(colData %>% select(eligible_responses),
2,
function(x){
tab <- table(unname(unlist(x)))
mode <- names(tab)[order(tab)][1]
x[is.na(x)] <- mode
factor(x)
}
)
rows.to.keep <-
rnaseq_data_clean$bcr_patient_barcode %in% colData$bcr_patient_barcode
rsem.in <- data.frame(
t(
rnaseq_data_clean[rows.to.keep,colnames(rnaseq_data_clean)!="bcr_patient_barcode"]
)
)
if(is.numeric(as.integer(gene_size))){
rsem.in.sub <- rsem.in[sample(1:nrow(rsem.in),gene_size),]
}
if(gene_size=="full"){
rsem.in.sub <- rsem.in
}
#converting rsem to whole integers per
#https://www.biostars.org/p/320594/
formula <- as.formula(paste0("~",response_name))
suppressMessages(dds <- DESeqDataSetFromMatrix(ceiling(rsem.in.sub),
colData_filled,
formula))
res <- DESeq(dds)
if(is.numeric(as.integer(gene_size))){
rsem.in.sub <- rsem.in[sample(1:nrow(rsem.in),gene_size),]
}
is.numeric(as.integer(gene_size))
as.integer(gene_size)
is.integer(gene_size)
gene_size=="full"
colData %>% View()
colData_filled %>% View()
